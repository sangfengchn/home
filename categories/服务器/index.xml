<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>服务器 on Feng Sang | 桑峰</title>
    <link>/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
    <description>Recent content in 服务器 on Feng Sang | 桑峰</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 01 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Singularity-03-创建镜像</title>
      <link>/post/2021/06/01/blog/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/06/01/blog/</guid>
      <description>在Windows 10的Linux子系统（WLS）中安装singularity(version=2.6.0)，并创建镜像。
在之前多次尝试中发现，在直接创建.simg镜像时会报告错误（Error: no more available loop devices.），导致创建失败。尝试发现可以通过添加–sandbox参数解决。完整命令如下：
sudo singularity build --sandbox image_name library/recipes 其中，image_name为镜像的名称，library/recipes可以为shub，docker链接或符合singularity语法的配置文件（config.def）。如果在wsl中，输入上述命令后，提示无法找到此命令，而直接输入singularity可以正常显示相关信息。那么可以为singularity创建链接文件解决。
sudo ln -s /usr/local/singularity/bin/singularity /usr/bin/singularit 配置文件实例：
Bootstrap: yum OSVersion: 7 MirrorURL: http://mirror.centos.org/centos-%{OSVERSION}/%{OSVERSION}/os/$basearch/ Include: yum %labels Python version: 3.9.5 R version: 4.1.0 %post yum -y update yum -y groupinstall &amp;quot;Development Tools&amp;quot; yum install -y gcc gcc-c++ gcc-gfortran java-1.8.0-openjdk.x86_64 java-1.8.0-openjdk-devel.x86_64 yum install -y readline-devel bzip2-devel libXt-devel fonts-chinese tcl tcl-devel tclx tk tk-devel mesa-libGLU mesa-libGLU-devel libcurl libcurl-devel xz-devel.</description>
    </item>
    
    <item>
      <title>Linux-sudo xxx 无法找到命令</title>
      <link>/post/2021/05/31/blog/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/05/31/blog/</guid>
      <description>  问题描述 安装singularity后，将其安装路径通过.bashrc文件添加进PATH，并重新载入.bashrc. 尝试运行singularity，正常可用。但运行sudo singularity时，提示无法找到此命令。
 singularity version: 2.6.0-dist
install path: /usr/local/singularity
OS version: CentOS 7
  解决方法 在/usr/bin中创建singularity的连接文件即可。
sudo ln -s /usr/local/singularity/bin/singularity /usr/bin/singularity  参考 [1] https://blog.csdn.net/tanmx219/article/details/86750322
 </description>
    </item>
    
    <item>
      <title>Singularity-02-常见问题汇总</title>
      <link>/post/2021/05/20/blog/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/05/20/blog/</guid>
      <description>ERROR : Base home directory does not exist within the container: /brain 用沙盒模式创建镜像，然后以交互方式进入镜像后创建/brain目录。之后将沙盒格式的镜像打包为.img文件即可。
# 创建沙盒镜像 singularity build --sandbox centos7 docker://centos:7 # 以交互方式打开镜像 singularity shell --writable centos7/ Singularity: Invoking an interactive shell within container... # 镜像内创建缺失目录 Singularity centos7:~/envs&amp;gt; mkdir /brain Singularity centos7:~/envs&amp;gt; exit # 重新打包镜像 singularity build centos7.img centos7/  ERROR : Home directory is not owned by calling user: /usr/local/singularity-2.5.2 报错命令：singularity shell smriprep.simg
解决方法：添加–home xxx参数，这里必须是绝对路径。例如：singularity shell –home /babri/sangf/Desktop/test/ smriprep.</description>
    </item>
    
    <item>
      <title>Singularity-01-安装</title>
      <link>/post/2021/05/19/blog/</link>
      <pubDate>Wed, 19 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/05/19/blog/</guid>
      <description>  简单来讲，Singularity是一种可以跨平台执行的小型虚拟机。在数据分析时，首先往往要搭建运行环境，比如R，python等。为了保证结果的可靠性，通常要保证跨设备环境的一致性。但是在跨运算设备之间搭建相同的环境是一项比较麻烦的事情。因此，如果只搭建一次环境，就可以在各个设备上使用，就比较轻松了。Singularity和Docker就提供了这样的功能。笔者在这里使用Singularity[1]，版本为2.4.6。
安装依赖库 Ubuntu sudo apt-get update sudo apt-get install python dh-autoreconf build-essential libarchive-dev  CentOS sudo yum update sudo yum groupinstall &amp;#39;Development Tools&amp;#39; sudo yum install libarchive-devel   编译安装 VER=2.4.6 wget https://github.com/singularityware/singularity/releases/download/$VER/singularity-$VER.tar.gz tar xvf singularity-$VER.tar.gz cd singularity-$VER ./autogen.sh ./configure --prefix=&amp;quot;/usr/local/singularity-${VER}&amp;quot; make sudo make install 将/usr/local/singularity-2.4.6/bin添加进$PATH并重新加载配置文件。
echo &amp;quot;export $PATH=/usr/local/singularity-2.4.6/bin:$PATH&amp;quot; &amp;gt; ~/.bashrc source ~/.bashrc  图1. 显示singularity版本   参考 [1]: [https://singularity.lbl.gov/index.html]
  </description>
    </item>
    
  </channel>
</rss>
